
                    const enc_AmOL4xp7 = "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";
                    const key_6SuBMphp = "DhoeuCBJPQrWHraHysxvwej3DMT1ojpz";
                    
                    try {
                        let dec_0O6rI06Q;
                       if ("AES" === "AES") {
                              dec_0O6rI06Q = CryptoJS.AES.decrypt(enc_AmOL4xp7, key_6SuBMphp).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "Rabbit") {
                              dec_0O6rI06Q = CryptoJS.Rabbit.decrypt(enc_AmOL4xp7, key_6SuBMphp).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "TripleDES") {
                              dec_0O6rI06Q = CryptoJS.TripleDES.decrypt(enc_AmOL4xp7, key_6SuBMphp).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "DES") {
                              dec_0O6rI06Q = CryptoJS.DES.decrypt(enc_AmOL4xp7, key_6SuBMphp).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "RC4") {
                              dec_0O6rI06Q = CryptoJS.RC4.decrypt(enc_AmOL4xp7, key_6SuBMphp).toString(CryptoJS.enc.Utf8);
                          }

                        
                        if (dec_0O6rI06Q) {
                            document.write(dec_0O6rI06Q);
                            document.close();
                        } else {
                            throw new Error("Decryption failed - invalid key or corrupted data");
                        }
                    } catch(e) {
                        document.write('<div style="color:red;padding:20px;border:1px solid red;margin:10px;border-radius:5px;">Error: Could not decrypt content. Please verify the encryption key.</div>');
                        console.error("Decryption error:", e);
                    }
                