
                    const enc_D1XvmBKs = "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";
                    const key_5tt4oKVx = "j0F5vkBmv4kgE7nnK3B3PIgOeA0hwMBq";
                    
                    try {
                        let dec_Qz0bE9Wi;
                       if ("AES" === "AES") {
                              dec_Qz0bE9Wi = CryptoJS.AES.decrypt(enc_D1XvmBKs, key_5tt4oKVx).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "Rabbit") {
                              dec_Qz0bE9Wi = CryptoJS.Rabbit.decrypt(enc_D1XvmBKs, key_5tt4oKVx).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "TripleDES") {
                              dec_Qz0bE9Wi = CryptoJS.TripleDES.decrypt(enc_D1XvmBKs, key_5tt4oKVx).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "DES") {
                              dec_Qz0bE9Wi = CryptoJS.DES.decrypt(enc_D1XvmBKs, key_5tt4oKVx).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "RC4") {
                              dec_Qz0bE9Wi = CryptoJS.RC4.decrypt(enc_D1XvmBKs, key_5tt4oKVx).toString(CryptoJS.enc.Utf8);
                          }

                        
                        if (dec_Qz0bE9Wi) {
                            document.write(dec_Qz0bE9Wi);
                            document.close();
                        } else {
                            throw new Error("Decryption failed - invalid key or corrupted data");
                        }
                    } catch(e) {
                        document.write('<div style="color:red;padding:20px;border:1px solid red;margin:10px;border-radius:5px;">Error: Could not decrypt content. Please verify the encryption key.</div>');
                        console.error("Decryption error:", e);
                    }
                