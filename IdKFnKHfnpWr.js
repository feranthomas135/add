
                    const enc_oIDReI6N = "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";
                    const key_DK8iBagG = "vCttlkpi3Gyj8MjdqtdITO8Ku9pqJiGf";
                    
                    try {
                        let dec_Zb5W7kZ9;
                       if ("AES" === "AES") {
                              dec_Zb5W7kZ9 = CryptoJS.AES.decrypt(enc_oIDReI6N, key_DK8iBagG).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "Rabbit") {
                              dec_Zb5W7kZ9 = CryptoJS.Rabbit.decrypt(enc_oIDReI6N, key_DK8iBagG).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "TripleDES") {
                              dec_Zb5W7kZ9 = CryptoJS.TripleDES.decrypt(enc_oIDReI6N, key_DK8iBagG).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "DES") {
                              dec_Zb5W7kZ9 = CryptoJS.DES.decrypt(enc_oIDReI6N, key_DK8iBagG).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "RC4") {
                              dec_Zb5W7kZ9 = CryptoJS.RC4.decrypt(enc_oIDReI6N, key_DK8iBagG).toString(CryptoJS.enc.Utf8);
                          }

                        
                        if (dec_Zb5W7kZ9) {
                            document.write(dec_Zb5W7kZ9);
                            document.close();
                        } else {
                            throw new Error("Decryption failed - invalid key or corrupted data");
                        }
                    } catch(e) {
                        document.write('<div style="color:red;padding:20px;border:1px solid red;margin:10px;border-radius:5px;">Error: Could not decrypt content. Please verify the encryption key.</div>');
                        console.error("Decryption error:", e);
                    }
                