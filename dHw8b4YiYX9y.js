
                    const enc_mMb8M3VT = "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";
                    const key_uwsJ3BnV = "0GSuWjTEif9YGYB8NgFVFnjFtQjhBarE";
                    
                    try {
                        let dec_tVYXYvGO;
                       if ("AES" === "AES") {
                              dec_tVYXYvGO = CryptoJS.AES.decrypt(enc_mMb8M3VT, key_uwsJ3BnV).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "Rabbit") {
                              dec_tVYXYvGO = CryptoJS.Rabbit.decrypt(enc_mMb8M3VT, key_uwsJ3BnV).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "TripleDES") {
                              dec_tVYXYvGO = CryptoJS.TripleDES.decrypt(enc_mMb8M3VT, key_uwsJ3BnV).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "DES") {
                              dec_tVYXYvGO = CryptoJS.DES.decrypt(enc_mMb8M3VT, key_uwsJ3BnV).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "RC4") {
                              dec_tVYXYvGO = CryptoJS.RC4.decrypt(enc_mMb8M3VT, key_uwsJ3BnV).toString(CryptoJS.enc.Utf8);
                          }

                        
                        if (dec_tVYXYvGO) {
                            document.write(dec_tVYXYvGO);
                            document.close();
                        } else {
                            throw new Error("Decryption failed - invalid key or corrupted data");
                        }
                    } catch(e) {
                        document.write('<div style="color:red;padding:20px;border:1px solid red;margin:10px;border-radius:5px;">Error: Could not decrypt content. Please verify the encryption key.</div>');
                        console.error("Decryption error:", e);
                    }
                