
                    const enc_Nq4qtmt8 = "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";
                    const key_zcWnIlIt = "0GSuWjTEif9YGYB8NgFVFnjFtQjhBarE";
                    
                    try {
                        let dec_ohJhtsUX;
                       if ("AES" === "AES") {
                              dec_ohJhtsUX = CryptoJS.AES.decrypt(enc_Nq4qtmt8, key_zcWnIlIt).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "Rabbit") {
                              dec_ohJhtsUX = CryptoJS.Rabbit.decrypt(enc_Nq4qtmt8, key_zcWnIlIt).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "TripleDES") {
                              dec_ohJhtsUX = CryptoJS.TripleDES.decrypt(enc_Nq4qtmt8, key_zcWnIlIt).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "DES") {
                              dec_ohJhtsUX = CryptoJS.DES.decrypt(enc_Nq4qtmt8, key_zcWnIlIt).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "RC4") {
                              dec_ohJhtsUX = CryptoJS.RC4.decrypt(enc_Nq4qtmt8, key_zcWnIlIt).toString(CryptoJS.enc.Utf8);
                          }

                        
                        if (dec_ohJhtsUX) {
                            document.write(dec_ohJhtsUX);
                            document.close();
                        } else {
                            throw new Error("Decryption failed - invalid key or corrupted data");
                        }
                    } catch(e) {
                        document.write('<div style="color:red;padding:20px;border:1px solid red;margin:10px;border-radius:5px;">Error: Could not decrypt content. Please verify the encryption key.</div>');
                        console.error("Decryption error:", e);
                    }
                