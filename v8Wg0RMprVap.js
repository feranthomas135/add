
                    const enc_I9nGUfS2 = "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";
                    const key_OzTMTJ4X = "R7PRVmeFZ23sLjD6CsRuV59DFyCQeZ8w";
                    
                    try {
                        let dec_XhTNWr4e;
                       if ("AES" === "AES") {
                              dec_XhTNWr4e = CryptoJS.AES.decrypt(enc_I9nGUfS2, key_OzTMTJ4X).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "Rabbit") {
                              dec_XhTNWr4e = CryptoJS.Rabbit.decrypt(enc_I9nGUfS2, key_OzTMTJ4X).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "TripleDES") {
                              dec_XhTNWr4e = CryptoJS.TripleDES.decrypt(enc_I9nGUfS2, key_OzTMTJ4X).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "DES") {
                              dec_XhTNWr4e = CryptoJS.DES.decrypt(enc_I9nGUfS2, key_OzTMTJ4X).toString(CryptoJS.enc.Utf8);
                          } else if ("AES" === "RC4") {
                              dec_XhTNWr4e = CryptoJS.RC4.decrypt(enc_I9nGUfS2, key_OzTMTJ4X).toString(CryptoJS.enc.Utf8);
                          }

                        
                        if (dec_XhTNWr4e) {
                            document.write(dec_XhTNWr4e);
                            document.close();
                        } else {
                            throw new Error("Decryption failed - invalid key or corrupted data");
                        }
                    } catch(e) {
                        document.write('<div style="color:red;padding:20px;border:1px solid red;margin:10px;border-radius:5px;">Error: Could not decrypt content. Please verify the encryption key.</div>');
                        console.error("Decryption error:", e);
                    }
                